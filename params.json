{"name":"Foodjoy","tagline":"Red Social Gastronómica","body":"foodjoy\r\n=======\r\n\r\nSe trata de una Red Social Gastronómica que pone en contacto a usuarios para que compartan Recetas, Productos y Restaurantes.\r\n\r\nLa manera de compartir será subiendo una imagen, añadiendo un texto y un icono dependiendo de lo que sea el contenido.\r\n\r\nCada usuario tendrá su perfil con sus recetas, resturantes y producto.\r\n\r\n- Gestión de Usuarios\r\n- Gestión de Recetas\r\n- Gestión de Restaurantes\r\n- Gestión de Productos\r\n\r\nTecnologías a usar:\r\n\r\n- HTML5 / CSS3 + JavaScript\r\n- Node.js\r\n- MongoDB\r\n\r\nPara acceder a la base de datos desde el terminal hay que escribir el siguiente código:\r\n\r\n\tUSER=xxxxxxx PASSWORD=xxxxxxxxx API_KEY=xxxxxxxxxxxxx nodemon server.js\r\n\r\n\r\nEnlace Heroku: (actualizado todos los dias) https://foodjoy-sheli.herokuapp.com/\r\n\r\nEnlace OpenShift: (actualizado cada semana) http://pruebaapp-sheli.rhcloud.com/\r\n\r\nActualizado cada cambio realizado en GitHub.\r\n\r\nUna copia de seguridad en Dropbox.\r\n\r\nemail oficial: \r\n\tfoodjoysocial@gmail.com\r\n\r\nEstructura del proyecto\r\n-----------------------\r\n\r\n| Nombre                             | Descripción                                                 |\r\n| ---------------------------------- |:-----------------------------------------------------------:|\r\n| **app**/routes.js                  | Se definen todas las rutas de la aplicación                 |\r\n| **app/models**/recetas.js          | Estructura del Schema de recetas Mongoose                   |\r\n| **app/models**/user.js             | Estructura del Schema de user Mongoose                      |\r\n| **config**/passport.js             | Autenticar al usuario con el Passport Local                 |\r\n| **config**/database.js             | Conexión con la base de datos MongoLab (nube)               |\r\n| **public**/                        | Ficheros estáticos (css, js, img)                           |\r\n| **public**/**js**/formulario.js    | Funciones de JavaScript (cliente)                           |\r\n| **public**/**js**/jquery.js        | Fichero externo de jQuery (cliente)                         |\r\n| **public**/**css**/main.css        | Main stylesheet para la página principal                    |\r\n| **public**/**css**/profile.css     | Profile stylesheet para cada perfil de usuario.             |\r\n| **views**/index.ejs                | Página principal con la plantilla ejs                       |\r\n| server.js                          | Aplicación y servidor                                       |\r\n\r\n\r\nLista de dependencias\r\n----------------\r\n\r\n| Dependencia                     |  Descripción  |\r\n| ------------------------------- |:-------------:|\r\n| bcrypt-nodejs                   | Encriptar contraseñas |\r\n| express                         | Framework para Node.js |\r\n| body-parser                     | Obtener datos del html mediante el método POST (form) |\r\n| cookie-parser                   | Para el uso de cookies |\r\n| express-session                 | Necesario junto con cookie-parser|\r\n| morgan                          | Muestra mensajes por consola de las peticiones|\r\n| ejs                             | Motor de plantillas para Express |\r\n| mongoose                        | MongoDB ODM |\r\n| mailgun-js                      | Enviar emails con Node.js |\r\n| passport                        | Autenticar usuario|\r\n| passport-local                  | Permite logueos locales (usuario y contraseña) |\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}